import { INeucronWalletAPI, SigResult } from './INeucronWalletAPI';
export declare class NeucronWalletAPI implements INeucronWalletAPI {
    authToken: string;
    address: null;
    publickey: null;
    constructor(authToken?: string);
    exitAccount(): void;
    getAddress: () => Promise<string>;
    getBsvBalance: () => Promise<any>;
    getPublicKey: () => Promise<any>;
    isConnect(): Promise<boolean>;
    requestAccount: () => Promise<any>;
    signMessage: (msg: string) => Promise<string>;
    signTransaction: (txHex: string, inputInfos: {
        inputIndex: number;
        scriptHex: string;
        satoshis: number;
        sighashType: number;
        address: number | string;
    }[]) => Promise<SigResult[]>;
    signTx: (options: {
        list: {
            txHex: string;
            address: string;
            inputIndex: number;
            scriptHex: string;
            satoshis: number;
            sigtype: number;
        }[];
    }) => Promise<{
        sigList: Array<{
            publicKey: string;
            r: string;
            s: string;
            sig: string;
        }>;
    }>;
}
//# sourceMappingURL=NeucronWalletAPI.d.ts.map