"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Shift10 = void 0;
const scrypt_ts_1 = require("scrypt-ts");
/*
NOTICES:
    1) due to the computational nature of base 10, pow(n) is limited (n=10^999 as max value)
    2) import of this module adds ~40 bytes to a contract, even if not using any of its functions
       (subject to change, depending on future compiler optimizations)
*/
class Shift10 extends scrypt_ts_1.SmartContractLib {
    // Return 10^n.
    static pow(n) {
        (0, scrypt_ts_1.assert)(n >= 0n && n <= 999n, 'pow not in range');
        return (Shift10.arr0[Number(n % 10n)] *
            Shift10.arr1[Number((n / 10n) % 10n)] *
            Shift10.arr2[Number((n / 100n) % 10n)]);
    }
    // Base10 left shift number x by n places.
    static left(x, n) {
        return x * Shift10.pow(n);
    }
    // Base10 right shift number x by n places.
    static right(x, n) {
        return x / Shift10.pow(n);
    }
}
exports.Shift10 = Shift10;
Shift10.i1 = 10n;
Shift10.i2 = 100n;
Shift10.i3 = 1000n;
Shift10.i4 = 10000n;
Shift10.i5 = 100000n;
Shift10.arr0 = [
    1n,
    Shift10.i1,
    Shift10.i2,
    Shift10.i3,
    Shift10.i4,
    Shift10.i5,
    Shift10.i5 * Shift10.i1,
    Shift10.i5 * Shift10.i2,
    Shift10.i5 * Shift10.i3,
    Shift10.i5 * Shift10.i4,
];
Shift10.i1_1 = Shift10.i5 * Shift10.i5; // 10000000000
Shift10.i2_1 = Shift10.i1_1 * Shift10.i1_1;
Shift10.i3_1 = Shift10.i2_1 * Shift10.i1_1;
Shift10.i4_1 = Shift10.i2_1 * Shift10.i2_1;
Shift10.i5_1 = Shift10.i4_1 * Shift10.i1_1;
Shift10.arr1 = [
    // 1, i1_1, i2_1, i1_1*i2_1, i2_1*i2_1, i5_1, i5_1*i1_1, i5_1*i2_1, i5_1*i1_1*i2_1, i5_1*i2_1*i2_1
    1n,
    Shift10.i1_1,
    Shift10.i2_1,
    Shift10.i3_1,
    Shift10.i4_1,
    Shift10.i5_1,
    Shift10.i5_1 * Shift10.i1_1,
    Shift10.i5_1 * Shift10.i2_1,
    Shift10.i5_1 * Shift10.i3_1,
    Shift10.i5_1 * Shift10.i4_1,
];
Shift10.i1_2 = Shift10.i5_1 * Shift10.i5_1;
Shift10.i2_2 = Shift10.i1_2 * Shift10.i1_2;
Shift10.i3_2 = Shift10.i2_2 * Shift10.i1_2;
Shift10.i4_2 = Shift10.i2_2 * Shift10.i2_2;
Shift10.i5_2 = Shift10.i4_2 * Shift10.i1_2;
Shift10.arr2 = [
    // 1, i1_2, i2_2, i1_2*i2_2, i2_2*i2_2, i5_2, i5_2*i1_2, i5_2*i2_2, i5_2*i1_2*i2_2, i5_2*i2_2*i2_2
    1n,
    Shift10.i1_2,
    Shift10.i2_2,
    Shift10.i3_2,
    Shift10.i4_2,
    Shift10.i5_2,
    Shift10.i5_2 * Shift10.i1_2,
    Shift10.i5_2 * Shift10.i2_2,
    Shift10.i5_2 * Shift10.i3_2,
    Shift10.i5_2 * Shift10.i4_2,
];
__decorate([
    (0, scrypt_ts_1.prop)()
], Shift10, "i1", void 0);
__decorate([
    (0, scrypt_ts_1.prop)()
], Shift10, "i2", void 0);
__decorate([
    (0, scrypt_ts_1.prop)()
], Shift10, "i3", void 0);
__decorate([
    (0, scrypt_ts_1.prop)()
], Shift10, "i4", void 0);
__decorate([
    (0, scrypt_ts_1.prop)()
], Shift10, "i5", void 0);
__decorate([
    (0, scrypt_ts_1.prop)()
], Shift10, "arr0", void 0);
__decorate([
    (0, scrypt_ts_1.prop)()
], Shift10, "i1_1", void 0);
__decorate([
    (0, scrypt_ts_1.prop)()
], Shift10, "i2_1", void 0);
__decorate([
    (0, scrypt_ts_1.prop)()
], Shift10, "i3_1", void 0);
__decorate([
    (0, scrypt_ts_1.prop)()
], Shift10, "i4_1", void 0);
__decorate([
    (0, scrypt_ts_1.prop)()
], Shift10, "i5_1", void 0);
__decorate([
    (0, scrypt_ts_1.prop)()
], Shift10, "arr1", void 0);
__decorate([
    (0, scrypt_ts_1.prop)()
], Shift10, "i1_2", void 0);
__decorate([
    (0, scrypt_ts_1.prop)()
], Shift10, "i2_2", void 0);
__decorate([
    (0, scrypt_ts_1.prop)()
], Shift10, "i3_2", void 0);
__decorate([
    (0, scrypt_ts_1.prop)()
], Shift10, "i4_2", void 0);
__decorate([
    (0, scrypt_ts_1.prop)()
], Shift10, "i5_2", void 0);
__decorate([
    (0, scrypt_ts_1.prop)()
], Shift10, "arr2", void 0);
__decorate([
    (0, scrypt_ts_1.method)()
], Shift10, "pow", null);
__decorate([
    (0, scrypt_ts_1.method)()
], Shift10, "left", null);
__decorate([
    (0, scrypt_ts_1.method)()
], Shift10, "right", null);
//# sourceMappingURL=shift10.js.map