"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ArrayUtils = void 0;
const scrypt_ts_1 = require("scrypt-ts");
// A library that emulates an array interface on top of a ByteString.
class ArrayUtils extends scrypt_ts_1.SmartContractLib {
    // Get the byte at the given index.
    static getElemAt(b, idx) {
        return (0, scrypt_ts_1.slice)(b, idx, idx + 1n);
    }
    // Set the byte at the given index.
    static setElemAt(b, idx, val) {
        return (0, scrypt_ts_1.slice)(b, 0n, idx) + val + (0, scrypt_ts_1.slice)(b, idx + 1n);
    }
}
exports.ArrayUtils = ArrayUtils;
__decorate([
    (0, scrypt_ts_1.method)()
], ArrayUtils, "getElemAt", null);
__decorate([
    (0, scrypt_ts_1.method)()
], ArrayUtils, "setElemAt", null);
//# sourceMappingURL=arrayUtils.js.map