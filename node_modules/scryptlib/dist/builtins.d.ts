/// <reference types="node" />
import { bsv, Bytes, Int, Ripemd160 } from '.';
/**
 * bigint can be converted to string with pack
 * @category Bytes Operations
 */
export declare function pack(n: bigint): Bytes;
/**
* ByteString can be converted to bigint using function unpack.
* @category Bytes Operations
*/
export declare function unpack(a: Bytes): bigint;
export declare function num2bin(n: bigint, dataLen: number): string;
export declare function bin2num(hex: string): bigint;
export declare function and(a: Int, b: Int): Int;
export declare function or(a: Int, b: Int): Int;
export declare function xor(a: Int, b: Int): Int;
export declare function invert(a: Int): Int;
export declare function len(hexstr: string): bigint;
export declare function toLEUnsigned(n: bigint, l: number): string;
export declare function writeVarint(b: string): string;
export declare function buildOpreturnScript(data: string): bsv.Script;
export declare function buildPublicKeyHashScript(pubKeyHash: Ripemd160): bsv.Script;
export declare function hash160(hexstr: string, encoding?: BufferEncoding): string;
export declare function sha256(hexstr: string, encoding?: BufferEncoding): string;
export declare function hash256(hexstr: string, encoding?: BufferEncoding): string;
